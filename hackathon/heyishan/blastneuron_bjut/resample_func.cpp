/* resample_swc_func.cpp
 * This is a plugin to resample neuron swc subject to a fixed step length.
 * 2012-03-02 : by Yinan Wan
 */
#include"resampling.h"
#include<vector>
#include"v3d_message.h"
#include"v3d_interface.h"
#include <iostream>
#include"openSWCDialog.h"

bool export_list2file(QList<NeuronSWC> & lN, QString fileSaveName, QString fileOpenName)
{
    printf("point3");
    QFile file(fileSaveName);
    if (!file.open(QIODevice::WriteOnly|QIODevice::Text))
        return false;
    QTextStream myfile(&file);
    myfile<<"# generated by Vaa3D Plugin resample_swc"<<endl;
    myfile<<"# source file(s): "<<fileOpenName<<endl;
    myfile<<"# id,type,x,y,z,r,pid"<<endl;
    for (V3DLONG i=0;i<lN.size();i++)
        myfile << lN.at(i).n <<" " << lN.at(i).type << " "<< lN.at(i).x <<" "<<lN.at(i).y << " "<< lN.at(i).z << " "<< lN.at(i).r << " " <<lN.at(i).pn << "\n";

    file.close();
    cout<<"swc file "<<fileSaveName.toStdString()<<" has been generated, size: "<<lN.size()<<endl;
    return true;
};

bool resampling_main(const V3DPluginArgList & input, V3DPluginArgList & output)
{
    vector<char*>* inlist = (vector<char*>*)(input.at(0).p);
    vector<char*>* outlist = NULL;
    vector<char*>* paralist = NULL;
    cout<<"input_size ="<<input.size()<<endl;
    if(input.size() != 2)
    {
        printf("Please specify both input file and step length parameter.\n");
        return false;
    }
    paralist = (vector<char*>*)(input.at(1).p);
    cout<<"point1"<<endl;
    if (paralist->size()!=1)
    {
        printf("Please specify only one parameter - the resampling step length.\n");
        return false;
    }
    double step = atof(paralist->at(0));
    printf("point 2");
    QString fileOpenName = QString(inlist->at(0));
    QString fileSaveName;
    if (output.size()==0)
    {
        printf("No outputfile specified.\n");
        fileSaveName = fileOpenName + "_resampled.swc";
    }
    else if (output.size()==1)
    {
        outlist = (vector<char*>*)(output.at(0).p);
        fileSaveName = QString(outlist->at(0));
    }
    else
    {
        printf("You have specified more than 1 output file.\n");
        return false;
    }

    NeuronTree nt;
    if (fileOpenName.toUpper().endsWith(".SWC") || fileOpenName.toUpper().endsWith(".ESWC"))
        nt = readSWC_file(fileOpenName);

    NeuronTree result = resample(nt,step);
    if (!export_list2file(result.listNeuron, fileSaveName, fileOpenName))
    {
        printf("fail to write the output swc file.\n");
        return false;
    }

    return true;
}

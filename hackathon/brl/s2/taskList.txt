2016.09.15
uhh  adding stage control to s2...
1. add new s2controller instance to handle the position polling and another to handle the xy position commands

2016.08.30

adding stage control to S2:

1. add relative move commands and stage position updates to s2controller obviously units are important here and have to be tested at the rig with no chance of crashing objective or condenser

2. add hard limits to stage move positions, i.e. a check in s2controller to not allow relative moves or absolute moves beyond certain coordinates.

3. add stage coordinates conversion to pixels and RESET button to 'zero'.  add button to mark stage position by dropping full FOV square on graphicsScene

when you start s2, you should store the current xy position and somehow keep track of difference between planned coordinates (relative movements) and current reported coordinates so you don't end up
with problems if someone zeros the manipulator (!)
>>>> IS THE REPORTED XY STAGE POSITION THE ABSOLUTE VALUE OR THE 'ZERO'd' VALUE?   if it's in relation to a user-set zero, I need to somehow disable that button on the GUI... or constantly poll the above condition
and stop all stage movement if the stage was zeroed.

VERDICT:  zero button on ASI controller = zero on PV GUI, meaning that the zero can be changed at any time by clicking or by zeroing on the ASI box!!

so...
add constant polling to check difference between current location reported by PV and the dead-reckoning location based on s2-initiated movements.  THIS WILL TRIGGER IF SOMEONE EVEN TOUCHES THE JOYSTICK!

wtf. now I have to constantly poll and make sure the current location never gets near zero (?!)  or something to try to ID spurious 'zero' button clicks.

I suppose it's OK-  the idea is that the stage has to be where s2 thinks it is, otherwise it should stop the acquisition.



4. add stage coordinates to s2 sequence... ?
rules:  A. EVERYTHING in each stage location has to be traced before moving stage
        B. stage coordinates will be kept track of during each phase-  you can end up with 4 stage locations from a starting tile...
        C. anything returning back to a previous stage location... ?  check...
        D. add stage coordinates to image tile locations
        E. ALSO keep track of image and stage coordinates separately because you will need both bits of info for debugging.









one way to do this is to essentially add another state to the s2 handler (akin to the automatic BB scan) that only runs after an s2 scan is complete.

basically, the pixel locations we've been using (within one scan unit) and the framework we have currently, the seed locations and tile locations just keep on trucking beyond the limits of the scanunit.
the problem is that once the stage moves, those pixel locations will still be within one scan unit (for the pan galvo commands and tile locations) but the offset will be needed to match them all up.

so the 3 new parameters will be

1.  scanUnitOffset [x,y] set to [0,0] for the first tile
2.  currentStageLocation [x,y] should be constantly polled and kept up-to-date
3.  offsetOffset [x,y] is the 'currentStageLocation' for the first tile... this should be reset at the start of s2scan


the s2scan stuff will only know about the scanUnitOffset
currentStageLocation-offsetOffset will be used to plot scanUnits on the graphicsScene




get this to work, then try to handle multiple starting points...
remember that the xy stage location data is in the .xml file...















>>>>>>>>>>>   add point-and-click for 'new tile'  or 're-image' or whatever.   this could be eventually hooked up to a 're-image' option.





2016.03.25

current problems with adaptive window:
1. tile location (in ROI map and in .tc file) is incorrect relative to the image data.
2. the image data is (probably) what you want (i.e the continuing dendrite in a neighboring area), but the location
is incorrect.

to be clear: the final stitched data does not accurately show continuous structures because the image tiles are placed at the
wrong location. as opposed to placing the tiles at the right location with the wrong image data


so the tile location between the internal stuff (location.x location.y ,etc) and the scan location
needs to be figured out.  maybe shifting the coordinates by half the window is not enough?  also need a global origin shift?

---


ugh.  adaptive window scanning is broken. somehow invalid zooms are being passed to PV.  also PV is not starting the zstack for some reason.




2016.03.02
URGENT:  FIX EVENTLOGGER!   time differences are inconsistent, whole file gets appended multiple times, some negative elapsed times, add summary statistics

 Add tab for configuration info,
add option to run 1 marker or run all markers
Add ROI controls-  with z scan info.
Add total info /progress into dialog at ‘click ok’ and maybe add cancel option.
add mode for resonant control. most code is now robust against active mode, but need a button to set active mode
and ideally a way to assess if it's running properly at the tight zoom


2016.02.26

 Add tab for configuration info,
add option to run 1 marker or run all markers
Add ROI controls-  with z scan info.
Add total info /progress into dialog at ‘click ok’ and maybe add cancel option.
add mode for resonant control. most code is now robust against active mode, but need a button to set active mode
and ideally a way to assess if it's running properly at the tight zoom

2016.02.11  update task list

NEW:
1. add mode for resonant control. most code is now robust against active mode, but need a button to set active mode
and ideally a way to assess if it's running properly at the tight zoom

2. Add tab for configuration info, including button to update save directory. also add code to check for existance of .config save directory

/data/mat/BRL/testData/ZSeries-02112016-1549-1076/ZSeries-02112016-1549-1076_Cycle00001_Ch2_000001.ome.tif

REMAINING FROM PREVIOUS:
add option to run 1 marker or run all markers
Add total info /progress into dialog at ‘click ok’ and maybe add cancel option.
#Try MIP display for each ROI,
Add ROI controls-  with z scan info.
#allow user to generate block grid based on 2 anchor points in preview scan
#...then Automatically scan the whole grid in full resolution.


2015.02.01 meeting generated this chunk of tasks:

# add RESET button to return system (to overview mode?)
#add preview with 3-5 plane MIP
#add cell body markers as starting locations
add option to run 1 marker or run all markers
#add option to pop up window for tracing or not
# add configuration.
REMAINING FROM PREVIOUS:
Add total info /progress into dialog at ‘click ok’ and maybe add cancel option.
Try MIP display for each ROI,
Add ROI controls-  with z scan info.
allow user to generate block grid based on 2 anchor points in preview scan
...then Automatically scan the whole grid in full resolution.



2015.01.27 meeting generated this chunk of tasks.

started 2015.01.28 1545

GUI:

# Move ROI monitor field to another tab on left side. Keep right side devoted to ROI overview graphicsview.



# NoteTaker- make ‘save’ functional,  ALSO ADDED LOCAL SAVE DIRECTORY FOR ALL RELEVANT STACK, SWC, v3draw, etc data

# hook up all qDebug<< and s2LineEdit to status.

# Eliminate display of file reads.

# CLEANED UP stack loading code to eliminate duplicate code. need to test

# add automatic saving of notes file.


# Make “smartScan”  the biggest, first button so the user can see what to do.

# Improve wording on buttons/labels



#Add dialog for ‘entire thing finished’ or similar..






# but it’s more important to display order number on ROI plot.



# Fix ROI xy directions on ROI plot relative to images



# didnt do this- just look for the highest numberDisplay current ROI location in red and/or label ‘current’.



Internal control of the program:


# Add user-adjustable overlap between tiles.





Major Addition:

# testing single plane version>Create method to scan whole area in low-res preview mode with no z (or 3 plane z stack MIP?)  and show the image.



